!function(e,t){if("object"==typeof exports&&"object"==typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var o=t();for(var r in o)("object"==typeof exports?exports:e)[r]=o[r]}}(self,(()=>(()=>{"use strict";var e={d:(t,o)=>{for(var r in o)e.o(o,r)&&!e.o(t,r)&&Object.defineProperty(t,r,{enumerable:!0,get:o[r]})},o:(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r:e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})}},t={};e.r(t),e.d(t,{default:()=>n,isoCodeToFlagEmoji:()=>r});const o=/^[a-z]{2}$/i,r=e=>{if(null===e)return"";if(!o.test(e)){const t=typeof e;throw new TypeError(`Expected 'iso_code' to be an ISO 3166-1 alpha-2 string, received '${"string"===t?e:`type ${t}`}' instead.`)}const t=e.toUpperCase().split("").map((e=>e.codePointAt(0)+127397));return String.fromCodePoint(...t)},n=r;return t})()));